name: "sd-mesh-geometry-stage2"
tag: "seed${seed}-${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 1
  width: 1024
  height: 1024
  eval_height: 1024
  eval_width: 1024
  camera_distance_range: [1.5, 1.8]
  fovy_range: [60, 70]
  elevation_range: [0, 40]
  eval_camera_distance: 1.8
  eval_fovy_deg: 65.
  n_val_views: 4

  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.

system_type: "prolificdreamer-system"
system:
  stage: geometry
  geometry_convert_from: ???
  geometry_convert_inherit_texture: true
  geometry_type: "tetrahedra-sdf-grid"
  geometry:
    radius: 1.0 # consistent with last stage
    isosurface_resolution: 128 # consistent with last stage
    isosurface_deformable_grid: true
    isosurface_remove_outliers: true
    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 20
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096

  material_type: "no-material" # unused
  material:
    n_output_dims: 0

  background_type: "solid-color-background" # unused

  renderer_type: "nvdiff-rasterizer"
  renderer:
    context_type: cuda

  # noise_generator: unused

  t_scheduler_type: timestep-scheduler
  t_scheduler:
    min_step_percent: 0.02
    max_step_percent: 0.98
    sqrt_anneal: false
    dreamtime_anneal: [700,400,100,200]
    trainer_max_steps: ${trainer.max_steps}

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???

  guidance_type: "stable-diffusion-unified-guidance"
  guidance:
    weighting_strategy: dmd
    guidance_type: sds
    guidance_stab_type: null
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    guidance_scale: 50.
    use_img_loss: null

  loggers:
    wandb:
      enable: false
      project: ${name}
      name: ${tag}

  loss:
    lambda_sd: 1.
    lambda_normal_consistency: 10000.
    lambda_laplacian_smoothness: 10000.
    lambda_z_variance: 0.

  optimizer:
    name: Adam
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-8

trainer:
  max_steps: 15_000
  log_every_n_steps: 50
  num_sanity_val_steps: 0
  val_check_interval: 500
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
